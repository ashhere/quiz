{"version":3,"sources":["Helper/Context.js","component/Menu.js","Helper/Question.js","component/Qns.js","component/Endscreen.js","App.js","index.js"],"names":["QuizContext","createContext","Menu","useContext","setGameState","gameState","name","setName","console","log","className","type","onChange","event","target","value","placeholder","onClick","Question","prompt","optionA","optionB","optionC","optionD","answer","Qns","score","setScore","useState","currQuestion","setCurrQuestion","opChoosen","setOpChoosen","length","Endscreen","App","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3271b31b.chunk.js","sourcesContent":["import  React , { createContext } from \"react\";\r\n\r\nexport  const QuizContext = createContext();\r\n","import React,{useContext, useEffect, useState} from 'react';\r\nimport { QuizContext } from '../Helper/Context';\r\n\r\nfunction Menu(){\r\n\r\n    const { gameState , setGameState,name , setName} = useContext(QuizContext);\r\n\r\n    \r\n\r\n\r\n\r\n    console.log(name);\r\n\r\n    // const changeState = ()=> {\r\n    //     setGameState(\"qns\")\r\n    //     console.log(setGameState)\r\n    // }\r\n    return(\r\n        <>\r\n            <div className = \"Menu\">\r\n            \r\n                <div className = \"name\">\r\n                <input className=\"input\" type = \"text\" onChange = {(event)=>setName(event.target.value) } placeholder = \"  Enter your name\"></input>\r\n                </div>\r\n                <button className=\"firstlast-btn\" onClick = {()=> setGameState('qns')}>Start  Quiz</button>\r\n                \r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Menu;","\r\nexport  const Question = [\r\n         {\r\n             prompt: \" Which of the following is not an input device?\",\r\n             optionA: \"Mouse\",\r\n             optionB: \"Visual Display Unit \",\r\n             optionC: \"Keyboard\",\r\n             optionD : \"Light pen\",\r\n             answer : \"B\"\r\n\r\n\r\n        },\r\n        {\r\n            prompt: \" IC chips used in computers are usually made of: \",\r\n             optionA: \"Lead\",\r\n             optionB: \"Gold\",\r\n             optionC: \"Chromium\",\r\n             optionD : \"Silicon\",\r\n             answer : \"D\"\r\n        },\r\n\r\n        {\r\n            prompt: \" Which of the following is an example of non-volatile memory?\",\r\n             optionA: \"Cache memory\",\r\n             optionB: \"ROM\",\r\n             optionC: \"RAM\",\r\n             optionD : \"None of the above\",\r\n             answer : \"B\"\r\n        },\r\n\r\n        {\r\n            prompt: \" File extensions are used in order to?\",\r\n             optionA: \"Name the file\",\r\n             optionB: \"Ensure the filename is not lost\",\r\n             optionC: \"Identify the file\",\r\n             optionD : \"Identify the file type\",\r\n             answer : \"D\"\r\n        },\r\n\r\n        {\r\n            prompt: \" An assembler is?\",\r\n             optionA: \"Programming language-dependent\",\r\n             optionB: \"Syntax dependant\",\r\n             optionC: \"Machine dependant\",\r\n             optionD : \"Data dependant\",\r\n             answer : \"C\"\r\n        },\r\n\r\n        {\r\n            prompt: \" In which generation of computers, transistors were used?\",\r\n             optionA: \"First\",\r\n             optionB: \"Second\",\r\n             optionC: \"Third\",\r\n             optionD : \"Fourth\",\r\n             answer : \"B\"\r\n        },\r\n\r\n        {\r\n            prompt: \" The most common type of storage devices are?\",\r\n             optionA: \"persistent\",\r\n             optionB: \"optical\",\r\n             optionC: \"magnetic\",\r\n             optionD : \"flash\",\r\n             answer : \"C\"\r\n        },\r\n\r\n        {\r\n            prompt: \" Tells the computer how to use its components.\",\r\n             optionA: \"utility\",\r\n             optionB: \"network\",\r\n             optionC: \"operating system \",\r\n             optionD : \"motherboard\",\r\n             answer : \"C\"\r\n        }\r\n\r\n                    ]\r\n\r\n\r\n","import React, { useContext, useState } from 'react';\r\nimport {Question} from '../Helper/Question'\r\nimport {QuizContext} from '../Helper/Context'\r\n\r\n\r\nfunction Qns(){\r\n\r\n    const {score , setScore , gameState , setGameState} = useContext(QuizContext)\r\n    const [currQuestion , setCurrQuestion] = useState(0)\r\n    \r\n    const [opChoosen , setOpChoosen] = useState(\"\")\r\n\r\n\r\n   \r\n\r\n    const qnsChange = () =>{\r\n        if (Question[currQuestion].answer === opChoosen) {\r\n            setScore(score+1)\r\n        }\r\n        \r\n        setCurrQuestion(currQuestion + 1)\r\n    }\r\n    \r\n    const finisQuiz = () =>{\r\n        if (Question[currQuestion].answer === opChoosen) {\r\n            setScore(score+1)\r\n        }\r\n        setGameState(\"endscreen\")\r\n    }\r\n      \r\n    return(\r\n        <>\r\n            <div className = \"Qns\">\r\n\r\n              \r\n            <h1>Qns no.{currQuestion +1 } is :{Question[currQuestion].prompt}</h1>\r\n           \r\n            <button className=\"qns-btn\" onClick={()=> setOpChoosen(\"A\")}>{Question[currQuestion].optionA}</button>\r\n            <button className=\"qns-btn\" onClick={()=> setOpChoosen(\"B\")}>{Question[currQuestion].optionB}</button>\r\n            <button className=\"qns-btn\" onClick={()=> setOpChoosen(\"C\")}>{Question[currQuestion].optionC}</button>\r\n            <button className=\"qns-btn\" onClick={()=> setOpChoosen(\"D\")}>{Question[currQuestion].optionD}</button>\r\n            {/* <button onClick={()=> scoreResult()}>Submit</button> */}\r\n\r\n            \r\n            {currQuestion === Question.length -1 ? (\r\n                <button className=\"last-btn\" onClick = {()=> finisQuiz() }>Finsied Quiz</button>\r\n            ) : <button className=\"last-btn\" onClick = {()=> qnsChange()}>Next Questions</button>\r\n            }\r\n            </div>\r\n\r\n           \r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Qns;","import React , {useContext} from 'react';\r\nimport {QuizContext} from \"../Helper/Context\"\r\nimport {Question} from \"../Helper/Question\"\r\nfunction Endscreen(){\r\n\r\n    const {score , setScore , gameState , setGameState , name , setName} = useContext(QuizContext)\r\n\r\n    const play = () => {\r\n        setScore(0)\r\n        setGameState(\"qns\")\r\n    }\r\n\r\n    const mainmenu = () =>{\r\n        setScore(0)\r\n        setGameState(\"menu\")\r\n        setName(\"\")\r\n    }\r\n    return(\r\n        <>\r\n            <div className = \"Endscreen\">\r\n            <h1> {name} your Score is : {score} / {Question.length} </h1>\r\n\r\n            <button className=\"firstlast-btn\" onClick={()=> play()}>Play Again</button>\r\n            <button className=\"firstlast-btn\" onClick={()=> mainmenu()}>Main menu</button>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Endscreen;","import React, { useState , useContext} from 'react';\nimport Menu from './component/Menu';\nimport Qns from './component/Qns';\nimport Endscreen from './component/Endscreen'\nimport {QuizContext} from './Helper/Context'\nimport './App.css';\n\nfunction App() {\n\nconst [gameState ,setGameState] = useState('menu');\nconst [score, setScore] = useState(0);\nconst [name , setName] = useState(\"\");\n\n  return (\n    <>\n    <div className=\"App\">\n     \n      \n      <QuizContext.Provider value = {{ gameState , setGameState, score, setScore ,name , setName }}>\n\n      { gameState === \"menu\" && <Menu /> }\n      { gameState === \"qns\" && <Qns /> }\n      { gameState === \"endscreen\" && <Endscreen /> }\n      \n      </QuizContext.Provider>\n    </div> \n    </> \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}